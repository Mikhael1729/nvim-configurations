import React, { FC, useState, useEffect } from "react";
import { Typography, Select, MenuItem, Box, Button } from "@material-ui/core"
import Account from "models/account";
import AccountData from "models/account-data";
import { makeStyles, Theme } from "@material-ui/core/styles";

const useStyles = makeStyles((theme: Theme) => ({
  selectAccount: {
    display: "flex",
    flexDirection: "column",
    alignContent: "stretch",
    alignItems: "stretch"
  }
}))

export interface IAccountSelectorProps {
  accounts: Account[];
  onAccount?: (account: Account) => void;
}

const AccountSelector: FC<IAccountSelectorProps> = (props) => {
  const classes = useStyles();
  const { accounts, onAccount } = props;
  const [selected, setSelected] = useState(0);

  const convertAccountToString = (account: Account) =>
    `${account.type} (${account.accountNumber})`;

  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {
    const value = event.target.value as string;
    const index = parseInt(value, 10);

    setSelected(index);
  };

  useEffect(() => {
    if(onAccount)
      onAccount(accounts[selected]);
  }, [selected])

  return (
    <div className={classes.selectAccount}>
      <Typography variant="overline">Selecionar cuenta</Typography>
      <Select
        style={{ flexGrow: 1, flexBasis: 0 }}
        variant="outlined"
        labelId="demo-simple-select-outlined-label"
        id="demo-simple-select-outlined"
        value={selected}
        onChange={handleChange}
        label="Ageage"
      >
        {accounts.map((account: Account, index: number) => (
          <MenuItem key={index} value={index}>
            {convertAccountToString(account)}
          </MenuItem>
        ))}
      </Select>
    </div>
  )
}

export default AccountSelector;
