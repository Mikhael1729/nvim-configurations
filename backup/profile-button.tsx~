import React from "react"
import { FC } from "react"
import {
  Menu,
  MenuItem,
  Typography,
  Divider,
  Hidden,
  Popover,
  Button,
  Link,
} from "@material-ui/core"
import Img from "gatsby-image"
import { ArrowDropDown } from "@material-ui/icons"
import { makeStyles, createStyles, Theme } from "@material-ui/core/styles"
import { graphql, useStaticQuery, navigate } from "gatsby"

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    profileImage: {
      borderRadius: "50%",
      marginLeft: 10,
    },
    profileText: {
      [theme.breakpoints.up("sm")]: {
        display: "none",
      },
    },
  })
)

const options = ["Ver Perfil", "Cerrar Sesi√≥n"]
const ITEM_HEIGHT = 60

interface IProfileButtonProps {
  nameAndLastName: string;
}

const ProfileButton: FC<IProfileButtonProps> = ({ nameAndLastName }) => {
  const classes = useStyles()
  const data = useStaticQuery(graphql`
    query Query2 {
      file(absolutePath: { regex: "/flautista.jpg/" }) {
        childImageSharp {
          fixed(width: 30, height: 30) {
            ...GatsbyImageSharpFixed
          }
        }
      }
    }
  `)

  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)
  const open = Boolean(anchorEl)

  const handleClick = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget)
  }

  const hClose = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(null)
    navigate("/user-profile")

  }
  const close = () => {
    setAnchorEl(null)
  }
  const handleClose = () => {
    setAnchorEl(null)
    navigate("/login")
  }

  const name: string[] = ["Nelson Santos", "Mikhael Santos"]

  return (
    <>
      <Button
        aria-label="more"
        aria-controls="long-menu"
        aria-haspopup="true"
        endIcon={<ArrowDropDown />}
        onClick={handleClick}
      >
        <Hidden xsDown={true}>{nameAndLastName}</Hidden>
        <Img
          fixed={data.file.childImageSharp.fixed}
          className={classes.profileImage}
        />
      </Button>
      <Popover
        id="long-menu"
        anchorEl={anchorEl}
        keepMounted
        open={Boolean(anchorEl)}
        onClose={close}
        anchorOrigin={{
          vertical: "bottom",
          horizontal: "right",
        }}
        transformOrigin={{
          vertical: "top",
          horizontal: "right",
        }}
      >
        <Hidden smUp={true}>
          <MenuItem>
            <Typography variant="h6">{name[0]}</Typography>
          </MenuItem>
          <Divider />
        </Hidden>

        <MenuItem key={options[0]} onClick={hClose}>
          {options[0]}
        </MenuItem>

        <MenuItem
          key={options[1]}
          onClick={handleClose}
        >
          {options[1]}
        </MenuItem>
      </Popover>
    </>
  )
}

export default ProfileButton
