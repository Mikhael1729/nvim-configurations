import React, { FC, useState } from "react";
import { makeStyles, Theme } from "@material-ui/core/styles";
import Charts from "./charts";
import ChartData from "models/chart-data";
import { Typography, Select, MenuItem, Box, Button } from "@material-ui/core"
import Account from "models/account";
import FitComponent from "components/fit-component";

const useStyles = makeStyles((theme: Theme) => ({
  selectAccount: {
    display: "flex",
    flexDirection: "column",
    alignContent: "stretch",
    alignItems: "stretch"
  }
}))

export interface IAccountBalancesChartProps {
  accountsData: Array<{account: Account, balances: ChartData[]}>;
}

const AccountBalancesChart: FC<IAccountBalancesChartProps> = (props) => {
  const classes = useStyles();
  const { accountsData } = props;

  const [selected, setSelected] = useState(0);

  const selectedAccountData = accountsData[selected];

  const convertAccountToString = (account: Account) =>
    `${account.type} (${account.accountNumber})`;

  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {
    const value = event.target.value as string;
    const index = parseInt(value, 10);

    setSelected(index);
  };

  return (
    <div>
      <div className={classes.selectAccount}>
        <Typography variant="overline">Selecionar cuenta</Typography>
        <Select
          style={{ flexGrow: 1, flexBasis: 0 }}
          variant="outlined"
          labelId="demo-simple-select-outlined-label"
          id="demo-simple-select-outlined"
          value={selected}
          onChange={handleChange}
          label="Ageage"
        >
          {accountsData.map(({ account }, index: number) => (
            <MenuItem key={index} value={index}>
              {convertAccountToString(account)}
            </MenuItem>
          ))}
        </Select>
      </div>

      <Box m={4} />

      <Charts data={selectedAccountData.balances} />
    </div>
  )
}

export default AccountBalancesChart;
