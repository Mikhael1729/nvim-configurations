export const consumerNoticeMap: Record<string, keyof UnrefinedInformation> = {
  "Monto": "ammount",
  "Fecha": "dateTime",
  "Comercio": "commerce",
  "Estatus": "status"
}

export interface UnrefinedInformation {
  ammount?: string;
  dateTime?: string;
  commerce?: string;
  status?: string;
}

class ConsumerNoticeTable {
  ammount: number;
  dateTime: Date;
  commerce: string;
  status: string;

  constructor(unrefined: UnrefinedInformation) {
    this.ammount = this.extractAmmount(unrefined.ammount);
    this.dateTime = this.extractDate(unrefined.dateTime);
    this.commerce = unrefined.commerce || "";
    this.status = unrefined.status || "";
  }

  private extractStatus(status?: string): string {
    if(!status)
      return "";

    return status.replace(/<[^>]*>?/gm, '');
  } 

  private extractAmmount(stringAmmount?: string): number {
    if(!stringAmmount)
      return 0.00;
    
    try {
      const ammountWithoutCommas = stringAmmount.replace(',', '');
      const ammount = ammountWithoutCommas.substring(4, ammountWithoutCommas.length);
      const ammountInFloat = parseFloat(ammount);

      return ammountInFloat;
    } catch(e) {
      console.log(e);
      return 0.00
    }
  }

  private extractDate(dateInString?: string): Date {
    if(!dateInString)
      return new Date(Date.now());

    try {
      const parts = dateInString.split('/');
      const year = parseInt(parts[2]);
      const month = parseInt(parts[1]);
      const day = parseInt(parts[0]);

      const date: Date = new Date(year, month,day);

      return date;
    }
    catch(e) {
      console.log(e);
      return new Date(Date.now());
    }
  }
}

export default ConsumerNoticeTable;
