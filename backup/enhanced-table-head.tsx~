import { TableCell, TableHead, TableRow, TableSortLabel, Typography } from "@material-ui/core";
import React, { FC, ReactElement } from "react";
import Order from "models/order";
import { makeStyles, Theme } from "@material-ui/core/styles";
import IHeadCell from "models/ihead-cell";

const useStyles = makeStyles((theme: Theme) => ({
  visuallyHidden: {
    border: 0,
    clip: 'rect(0 0 0 0)',
    height: 1,
    margin: -1,
    overflow: 'hidden',
    padding: 0,
    position: 'absolute',
    top: 20,
    width: 1,
  },
}));

export interface IEnhancedTableProps<T> {
  headCells: IHeadCell<T>[];
  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof T) => void;
  order: Order;
  orderBy: string;
  rowCount: number;
}

// TODO: Continue understanding the code below.
function EnhancedTableHeader<T>(props: IEnhancedTableProps<T>): ReactElement {
  const classes = useStyles();

  const createSortHandler = (property: keyof T) => (event: React.MouseEvent<unknown>) => {
    props.onRequestSort(event, property);
  };

  return (
    <TableHead>
      <TableRow>
        {props.headCells.map((headCell: IHeadCell<T>, index: number) => { 
          if(!headCell.propertyName)
            return (
              <Typography variant="overline" style={{ color: "red" }}>
                {"<EnhancedTableHead /> - ERROR: "} No debes dejar propertyName vac√≠o
              </Typography>
            );

          return (
            <TableCell
              key={index}
              padding="default"
              sortDirection={
                props.orderBy === headCell.propertyName ? props.order : false
              }
            >
              <TableSortLabel
                active={props.orderBy === headCell.propertyName}
                direction={
                  props.orderBy === headCell.propertyName ? props.order : "asc"
                }
                onClick={createSortHandler(headCell.propertyName)}
              >
                <em>{headCell.label}</em>
                {props.orderBy === headCell.propertyName ? (
                  <span className={classes.visuallyHidden}>
                    {props.order === "desc"
                      ? "sorted descending"
                      : "sorted ascending"}
                  </span>
                ) : null}
              </TableSortLabel>
            </TableCell>
          )})}
      </TableRow>
    </TableHead>
  )
}

export default EnhancedTableHeader;
