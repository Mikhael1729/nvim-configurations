import React, { FC, ReactNode } from "react";
import { Card, CardContent, Box, Divider } from "@material-ui/core";
import { makeStyles, useTheme, Theme } from "@material-ui/core/styles";
import ProductSubtitle from "../product-subtitle";
import CreditCardIcon from "@material-ui/icons/CreditCard"
import AccountBalanceList from "./account-balance-list";
import AccountBalance from "./account-balance";
import AccountInfo from "./account-info";
import AccountInfoElement from "./account-info/account-info-element";
import {AccountType, AccountStatus} from "models/account";

const useStyles = makeStyles((theme: Theme) => ({
  root: {
  },
  bullet: {
    display: 'inline-block',
    margin: '0 2px',
    transform: 'scale(0.8)',
  },
  title: {
    fontSize: 14,
  },
  pos: {
    marginBottom: 12,
  },
  balanceBox: {
    border: `1px solid ${theme.palette.text.hint}`,
    borderRadius: "5%",
    padding: theme.spacing(1)
  },
  separation: {
    marginTop: theme.spacing(1.3)
  }
}));

interface IAccountDetailsProps {
  accountNumber: string;
  status: AccountStatus;
  accountType: AccountType;
  availableBalance: number;
  actualBalance: number;
  ammountInTransit: number;
  children?: never;
}

const AccountDetails: FC<IAccountDetailsProps> = (props) => {
  const classes = useStyles();

  return (
    <Card className={classes.root} variant="outlined">
      <CardContent>
        <ProductSubtitle
          primary="Detalles de la cuenta"
          secondary={props.accountNumber}
          icon={CreditCardIcon}
        />
      </CardContent>

      <Divider />

      <CardContent>
        <AccountInfo>
          <AccountInfoElement tag="Estado de cuenta" value={props.status} />
          <AccountInfoElement tag="Tipo de cuenta" value={props.accountType} />
        </AccountInfo>

        <br />

        <b>Balances de la cuenta:</b>

        <Box className={classes.separation} m={0} p={0} />

        <AccountBalanceList>
          <AccountBalance label="Disponible" value={props.availableBalance} />
          <AccountBalance label="Actual" value={props.actualBalance} />
          <AccountBalance label="En trÃ¡nsito" value={props.ammountInTransit} />
        </AccountBalanceList>
      </CardContent>
    </Card>
  )
}

export default AccountDetails;
