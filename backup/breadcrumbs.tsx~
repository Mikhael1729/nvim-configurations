import React, { SFC, useState, useEffect } from "react";
import { useBreadcrumb } from "gatsby-plugin-breadcrumb";
import { makeStyles, Theme, createStyles } from "@material-ui/core/styles";
import { NavigateNext as NavigateNextIcon } from "@material-ui/icons";
import { Breadcrumbs as MaterialBreadcrumbs, Link, Typography } from "@material-ui/core"
import { Link as GatsbyLink } from "gatsby";

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    root: {
      '& > * + *': {
        marginTop: theme.spacing(2),
      },
    },
  }),
);

interface ICrumb {
  crumbLabel?: string;
  crumbSeparator?: string;
  location?: { pathname: string };
  pathname?: string;
}

interface IBreadcrumb {
  crumbs: ICrumb[];
}

interface IBreadcrumbsProps {
  location: any;
  crumbLabel: string;
  crumbSeparator?: string;
}

const Breadcrumbs: SFC<IBreadcrumbsProps> = ({ location, crumbLabel, crumbSeparator }) => {
  const classes = useStyles();
  const breadcrumb = useBreadcrumb({ location, crumbLabel, crumbSeparator }) as IBreadcrumb;
  const previous = breadcrumb.crumbs.slice(0, breadcrumb.crumbs.length - 1);
  const current = breadcrumb.crumbs[breadcrumb.crumbs.length - 1];

  console.log('locatin', location);
  console.log('previous', previous);
  console.log('current', current);

  return (
    <div className={classes.root}>
      <MaterialBreadcrumbs
        separator={<NavigateNextIcon fontSize="small" />}
        aria-label="breadcrumb"
      >
        {previous.map((crumb: any) => (
          <Link
            key={crumb.crumbLabel}
            color="inherit"
            to={crumb.pathname}
            component={GatsbyLink}
          >
            {crumb.crumbLabel}
          </Link>
        ))}
        <Typography color="textPrimary">
          {crumbLabel || current.crumbLabel}
        </Typography>
      </MaterialBreadcrumbs>
    </div>
  )
}

Breadcrumbs.defaultProps = {
  crumbSeparator: " / ",
}

export default Breadcrumbs;
