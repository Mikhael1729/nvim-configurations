import React, { FC, useRef, ReactElement } from "react";
import { makeStyles, createStyles, Theme } from "@material-ui/core/styles";
import { Dialog, AppBar, Button, Toolbar, IconButton, Typography, Slide, Hidden } from "@material-ui/core";
import { Close as CloseIcon, GetApp } from "@material-ui/icons";
import { TransitionProps } from "@material-ui/core/transitions";
import Pdf from "react-to-pdf";

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    appBar: {
      position: "relative",
    },
    title: {
      marginLeft: theme.spacing(2),
      flex: 1,
    },
  })
)

const Transition = React.forwardRef(function Transition(
  props: TransitionProps & { children?: React.ReactElement },
  ref: React.Ref<unknown>
) {
  return <Slide direction="up" ref={ref} {...props} />
})

interface IReportModalProps {
  open: boolean;
  children: ReactElement;
  handleClose: () => void;
  actionButtonText: string;
  actionButtonIcon: ReactElement;
  title: string;
}

const ReportModal: FC<IReportModalProps> = ({ open, children, handleClose, actionButtonText, title, actionButtonIcon }) => {
  const classes = useStyles();
  const ref = useRef(null);

  async function handleSave(toPdf: any) {
    await toPdf();
    handleClose();
  }

  const options = {
    orientation: 'landscape',
  };

  return (
    <Dialog
      fullScreen
      open={open}
      onClose={handleClose}
      TransitionComponent={Transition}
    >
      <AppBar className={classes.appBar}>
        <Toolbar>
          <IconButton
            edge="start"
            color="inherit"
            onClick={handleClose}
            aria-label="close"
          >
            <CloseIcon />
          </IconButton>
          <Typography variant="h6" className={classes.title}>
            {title}
          </Typography>
          <Pdf
            targetRef={ref}
            filename="report.pdf"
            options={options}
            x={20}
            y={20}
          >
            {({ toPdf }: { toPdf: any }) => (
              <React.Fragment>
                <Hidden xsDown={true}>
                  <Button
                    autoFocus
                    color="inherit"
                    onClick={() => handleSave(toPdf)}
                    endIcon={actionButtonIcon}
                  >
                    {actionButtonText}
                  </Button>
                </Hidden>
                <Hidden smUp={true}>
                  <IconButton color="inherit">{actionButtonIcon}</IconButton>
                </Hidden>
              </React.Fragment>
            )}
          </Pdf>
        </Toolbar>
      </AppBar>
      <div
        style={{
          width: 1030,
          paddingLeft: 40,
          paddingRight: 40,
          paddingBottom: 40,
          paddingTop: 20,
        }}
      >
        <div ref={ref}>{children}</div>
      </div>
    </Dialog>
  )
}

ReportModal.defaultProps = {
  actionButtonText: "Descargar",
  actionButtonIcon: <GetApp />
}

export default ReportModal;
