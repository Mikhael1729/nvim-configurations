from models.element import Element

class Trimester(Element):
  identifier = 'T'
  identifier_name = ''

  @property
  def classroom_hours(self):
    return self.__classroom_hours

  @classroom_hours.setter
  def classroom_hours(self, value):
    self.__classroom_hours = value

  @property
  def subjects_quantity(self):
    return self.__subjects_quantity

  @subjects_quantity.setter
  def subjects_quantity(self, value):
    self.__subjects_quantity = value

  @property
  def travel_days(self):
    return self.__travel_days

  @travel_days.setter
  def travel_days(self, value):
    self.__travel_days = value

  @property
  def free_days(self):
    return 7 - self.travel_days

  @property
  def schedule_table_content(self):
    return self.__schedule_table_content

  @schedule_table_content.setter
  def schedule_table_content(self, value):
    self.__schedule_table_content = value

  @property
  def trimester_number(self):
    return self.__trimester_number

  @trimester_number.setter
  def trimester_number(self, value):
    self.__trimester_number = value

  @property
  def transportation_hours(self):
    return self.travel_days * (48 * 2) / 60

  @property
  def subjects(self):
    return self.__subjects

  @subjects.setter
  def subjects(self, value):
    self.__subjects = value

  def __init__(self, trimester_number, classroom_hours, subjects_quantity, travel_days, schedule_table_content, subjects):
    super(Trimester, self).__init__(
      Trimester.identifier + str(trimester_number),
      Element.generate_default_name('', Trimester.identifier_name)
    )
    
    self.__trimester_number = trimester_number
    self.__classroom_hours = classroom_hours
    self.__subjects_quantity = subjects_quantity
    self.__travel_days = travel_days
    self.__schedule_table_content = schedule_table_content
    self.__subjects = subjects

  def __str__(self):
    return f'''Trimester(
      trimester_number = {self.trimester_number}
      classroom_hours = {self.classroom_hours}
      subjects_quantity = {self.subjects_quantity}
      travel_days = {self.travel_days}
      schedule_table_content = {self.schedule_table_content}
    )
    '''

  @classmethod
  def from_subjects(cls, subjects, trimester_number = 0):
    schedule_table = ""
    classroom_hours = 0
    subjects_quantity = 0
    travel_days = []

    # Populate the trimester with the subjects
    for i in range(0, len(subjects)):
      subject = subjects[i]

      # Populate schedule table
      schedule_table += subject.to_markdown_table_row(subject, travel_days)

      # Meta data
      classroom_hours += subject.compute_hours_per_week()
      subjects_quantity += 1

    # Create README.md for the trimester

    return cls(
      trimester_number = trimester_number,
      classroom_hours = classroom_hours,
      subjects_quantity = subjects_quantity,
      travel_days = len(travel_days),
      schedule_table_content = schedule_table,
      subjects = subjects
    )

