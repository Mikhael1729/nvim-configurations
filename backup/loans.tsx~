import React, { useState } from "react";
import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';
import EnhancedTable from "components/enhanced-table";
import IHeadCell from "models/ihead-cell";
import EnhancedToolbar from "components/enhanced-table/enhanced-toolbar";
import { Typography, Divider, Fab, Paper } from "@material-ui/core";
import SwapVertIcon from '@material-ui/icons/SwapVert';
import Loan from "models/loan";
import CreateLoan from "screens/loans/create-loan";
import SC from "models/screen-component";
import { LoansAndStoreProps } from ".";

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    root: {
      "& > *": {
        margin: theme.spacing(1),
      },
    },
    extendedIcon: {
      marginRight: theme.spacing(1),
    },
    makeLoanFab: {
      position: "fixed",
      bottom: theme.spacing(2),
      right: theme.spacing(2),
    },
  }),
);

export interface ILoansProps {
  pageContext?: { breadcrumbName: string };
}

const Loans: SC<LoansAndStoreProps> = ({ pageContext, loans }) => {
  const classes = useStyles();
  const [filteredLoans, setFilteredLoans] = useState(loans);
  const headers: IHeadCell<Loan>[] = Loan.computeHeadCells();
  const [open, setOpen] = React.useState(false);

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <>
      <Typography variant="h3">Préstamos</Typography>
      <Divider />
      <br />
      <EnhancedTable
        TableContainerProps={{ component: Paper } as any}
        rows={filteredLoans}
        headerCells={headers}
        dateProperty="startDate"
        defaultOrderByPropertyName="startDate"
        toolbar={
          <EnhancedToolbar
            dateProperty="startDate"
            data={loans}
            filteredData={filteredLoans}
            filterData={setFilteredLoans}
          />
        }
      />

      <Fab variant="extended" color="primary" className={classes.makeLoanFab} onClick={handleClickOpen}>
        <SwapVertIcon className={classes.extendedIcon} />
        Solicitar Préstamo
      </Fab><CreateLoan open={open} handleClose={handleClose} />
    </>
  )
}

Loans.routeName = "/prestamos";

export default Loans;
